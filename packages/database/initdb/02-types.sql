-- ============================================================================
-- CUSTOM COMPOSITE TYPES
-- ============================================================================
-- This file defines custom PostgreSQL composite types used throughout the system
-- Composite types group related fields together and ensure data consistency
-- They provide type safety and make the schema more maintainable
-- ============================================================================

-- NOTE: Type definitions have been moved to 03-agents.sql
-- This file is kept for future custom types that don't conflict with agent types

-- ============================================================================
-- TYPE USAGE PATTERNS
-- ============================================================================
--
-- Composite types are used in table definitions as:
--
-- 1. Default values with ROW constructor:
--    memory_config NOT NULL DEFAULT ROW(...)::memory_config
--
-- 2. Field access in queries:
--    SELECT (agents.memory).enabled FROM agents;
--
-- 3. Updates of individual fields:
--    UPDATE agents SET memory.ltm_enabled = true WHERE id = $1;
--
-- 4. Complete type replacement:
--    UPDATE agents SET rag = ROW(true, 10, 'text-embedding-3-large')::rag_config;
--
-- See 03-agents.sql for complete type definitions and examples
-- ============================================================================