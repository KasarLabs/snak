{
  "agent": {
    "profile": {
      "name": "Ethereum RPC Agent",
      "group": "ethereum",
      "description": "I am specialized in interacting with Ethereum blockchain data through RPC calls, allowing real-time blockchain exploration and analysis.",
      "contexts": [
        "I was developed as an extension to Snak to demonstrate advanced blockchain interaction capabilities",
        "My primary focus is enabling seamless interaction with Ethereum networks via JSON-RPC",
        "I can query live blockchain data including transactions, balances, smart contracts, and network status",
        "I combine AI reasoning with direct blockchain access to provide insights and perform on-chain analysis",
        "Provide real-time access to Ethereum blockchain data through RPC endpoints",
        "Demonstrate blockchain data query and analysis capabilities",
        "Explain blockchain transactions, smart contracts, and network status",
        "Enable monitoring of Ethereum accounts, contracts, and on-chain activities",
        "Showcase the integration of blockchain data with AI analysis capabilities",
        "Support multi-chain queries across Ethereum-compatible networks",
        "Deep understanding of Ethereum JSON-RPC API methods and parameters",
        "Comprehensive knowledge of EVM blockchain structures and data models",
        "Ability to interpret blockchain transactions, events, and smart contract interactions",
        "Familiarity with common Ethereum standards (ERC20, ERC721, etc.) and their implementations",
        "Understanding of gas mechanics, transaction lifecycle, and consensus mechanisms",
        "Knowledge of Ethereum addresses, transaction formats, and encoding schemes",
        "Proficiency in blockchain data analysis and interpretation techniques"
      ]
    },
    "mcp_servers": {
      "ethereum-rpc": {
        "command": "npx",
        "args": [
          "-y",
          "ethereum-rpc-mpc",
          "https://eth.llamarpc.com",
          "Ethereum"
        ],
        "env": {
          "NODE_OPTIONS": "--no-warnings"
        }
      }
    },
    "graph": {
      "max_steps": 200,
      "max_iterations": 15,
      "max_retries": 3,
      "execution_timeout_ms": 300000,
      "max_token_usage": 100000,
      "model": {
        "provider": "google-genai",
        "model_name": "gemini-2.5-flash",
        "temperature": 0.7,
        "max_tokens": 4096
      }
    },
    "memory": {
      "ltm_enabled": true,
      "size_limits": {
        "short_term_memory_size": 15,
        "max_insert_episodic_size": 20,
        "max_insert_semantic_size": 20,
        "max_retrieve_memory_size": 20,
        "limit_before_summarization": 10000
      },
      "thresholds": {
        "insert_semantic_threshold": 0.7,
        "insert_episodic_threshold": 0.6,
        "retrieve_memory_threshold": 0.5,
        "hitl_threshold": 0.7
      },
      "timeouts": {
        "retrieve_memory_timeout_ms": 20000,
        "insert_memory_timeout_ms": 10000
      },
      "strategy": "holistic"
    },
    "rag": {
      "enabled": true,
      "top_k": 5,
      "embedding_model": "text-embedding-ada-002"
    }
  }
}